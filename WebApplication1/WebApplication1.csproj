<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
	  <TargetFramework>netcoreapp3.1</TargetFramework>
	  <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
	  <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
	  <IsPackable>false</IsPackable>
	  <SpaRoot>ClientApp\</SpaRoot>
	  <SpaProxyServerUrl>http://localhost:44456</SpaProxyServerUrl>
	  <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

	  <!-- Set this to true if you enable server-side prerendering -->
	  <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.24" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.24" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.24">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.24" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="3.1.24" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.3.1" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="6.0.0" />
  </ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="ClientApp\src\app\models\Car.ts" />
	  <None Remove="ClientApp\src\app\models\CarDetails.ts" />
	  <None Remove="ClientApp\src\app\models\ResponseData.ts" />
	  <None Remove="ClientApp\src\app\shared\environment-url.service.ts" />
	</ItemGroup>
	<ItemGroup>
	  <TypeScriptCompile Include="ClientApp\src\app\models\Car.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\models\CarDetails.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\models\ResponseData.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\shared\environment-url.service.ts" />
	</ItemGroup>
	<ItemGroup>
	  <Folder Include="ClientApp\src\assets\img\" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<PropertyGroup Condition="'$(Configuration)' == 'Debug'">
	  <TypeScriptTarget>ES5</TypeScriptTarget>
	  <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
	  <TypeScriptModuleKind />
	  <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
	  <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
	  <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
	  <TypeScriptOutFile />
	  <TypeScriptOutDir />
	  <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
	  <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
	  <TypeScriptSourceMap>True</TypeScriptSourceMap>
	  <TypeScriptMapRoot />
	  <TypeScriptSourceRoot />
	</PropertyGroup>
</Project>
